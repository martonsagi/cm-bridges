{"version":3,"sources":["src/app.js","src/contact-detail.js","src/contact-grid.js","src/contact-list.js","src/environment.js","src/main.js","src/messages.js","src/no-selection.js","src/utility.js","src/web-api.js","src/resources/index.js","src/resources/elements/loading-indicator.js","D:/Projects/cm-bridges/kendoui-pacman/src/app.html","D:/Projects/cm-bridges/kendoui-pacman/src/styles.css","D:/Projects/cm-bridges/kendoui-pacman/src/contact-detail.html","D:/Projects/cm-bridges/kendoui-pacman/src/contact-grid.html","D:/Projects/cm-bridges/kendoui-pacman/src/contact-list.html","D:/Projects/cm-bridges/kendoui-pacman/src/no-selection.html"],"names":["App","inject","api","configureRouter","config","router","title","map","route","moduleId","name","ContactDetail","ea","activate","params","routeConfig","getContactDetails","id","then","contact","navModel","setTitle","firstName","originalContact","JSON","parse","stringify","publish","save","saveContact","canDeactivate","result","confirm","lastName","isRequesting","ContactGrid","dataSource","kendo","data","DataSource","transport","read","options","getContactList","contacts","success","update","schema","model","subscribe","select","msg","selectedId","ContactList","console","log","found","find","x","Object","assign","created","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","ContactUpdated","ContactViewed","NoSelection","message","areEqual","obj1","obj2","keys","every","key","hasOwnProperty","latency","getId","email","phoneNumber","image","WebAPI","setTimeout","results","resolve","filter","instance","index","indexOf","push","globalResources","nprogress","LoadingIndicator","defaultValue","on","loadingChanged","newValue","done"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from 'aurelia-router';\r\nimport {WebAPI} from './web-api';\r\n\r\nexport class App {\r\n  router: Router;\r\n  static inject() { return [WebAPI]; }\r\n\r\n  constructor(api) {\r\n    this.api = api;\r\n  }\r\n\r\n  configureRouter(config: RouterConfiguration, router: Router) {\r\n    config.title = 'Contacts';\r\n    config.map([\r\n      { route: '',              moduleId: 'no-selection',   title: 'Select'},\r\n      { route: 'contacts/:id',  moduleId: 'contact-detail', name: 'contacts'}\r\n    ]);\r\n\r\n    this.router = router;\r\n  }\r\n}\r\n","import {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {WebAPI} from './web-api';\r\nimport {ContactUpdated,ContactViewed} from './messages';\r\nimport {areEqual} from './utility';\r\n\r\nexport class ContactDetail {\r\n  static inject = [WebAPI, EventAggregator];\r\n\r\n  constructor(api, ea) {\r\n    this.api = api;\r\n    this.ea = ea;\r\n  }\r\n\r\n  activate(params, routeConfig) {\r\n    this.routeConfig = routeConfig;\r\n\r\n    return this.api.getContactDetails(params.id).then(contact => {\r\n      this.contact = contact;\r\n      this.routeConfig.navModel.setTitle(contact.firstName);\r\n      this.originalContact = JSON.parse(JSON.stringify(contact));\r\n      this.ea.publish(new ContactViewed(contact));\r\n    });\r\n  }\r\n\r\n  get canSave() {\r\n    return this.contact.firstName && this.contact.lastName && !this.api.isRequesting;\r\n  }\r\n\r\n  save() {\r\n    this.api.saveContact(this.contact).then(contact => {\r\n      this.contact = contact;\r\n      this.routeConfig.navModel.setTitle(contact.firstName);\r\n      this.originalContact = JSON.parse(JSON.stringify(contact));\r\n      this.ea.publish(new ContactUpdated(this.contact));\r\n    });\r\n  }\r\n\r\n  canDeactivate() {\r\n    if (!areEqual(this.originalContact, this.contact)) {\r\n      let result = confirm('You have unsaved changes. Are you sure you wish to leave?');\r\n      if (!result) {\r\n        this.ea.publish(new ContactViewed(this.contact));\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {WebAPI} from './web-api';\r\nimport {ContactUpdated, ContactViewed} from './messages';\r\n\r\nexport class ContactGrid {\r\n  static inject = [WebAPI, EventAggregator];\r\n\r\n  dataSource = new kendo.data.DataSource({\r\n      transport: {\r\n          read: (options) => {\r\n              this.api.getContactList().then(contacts => {\r\n                   this.contacts = contacts;\r\n                   options.success(this.contacts);\r\n              });\r\n          },\r\n          update: (options) => {\r\n              this.api.saveContact(options.data)\r\n              .then(() => this.ea.publish(new ContactUpdated(options.data)))\r\n              .then(() => options.success(options.data));\r\n          }\r\n      },\r\n      schema: {\r\n        model: {\r\n            id: 'id'\r\n        }\r\n      }\r\n  })\r\n\r\n\r\n  constructor(api, ea) {\r\n    this.api = api;\r\n    this.ea = ea;\r\n    this.contacts = [];\r\n\r\n    ea.subscribe(ContactViewed, msg => this.select(msg.contact));\r\n    ea.subscribe(ContactUpdated, msg => this.dataSource.read());\r\n  }\r\n\r\n  select(contact) {\r\n    this.selectedId = contact.id;\r\n    return true;\r\n  }\r\n}\r\n","import {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {WebAPI} from './web-api';\r\nimport {ContactUpdated, ContactViewed} from './messages';\r\n\r\nexport class ContactList {\r\n  static inject = [WebAPI, EventAggregator];\r\n\r\n\r\n  constructor(api, ea) {\r\n    this.api = api;\r\n    this.ea = ea;\r\n    this.contacts = [];\r\n\r\n    ea.subscribe(ContactViewed, msg => this.select(msg.contact));\r\n    ea.subscribe(ContactUpdated, msg => {\r\n      console.log(msg);\r\n      let id = msg.contact.id;\r\n      let found = this.contacts.find(x => x.id === id);\r\n      Object.assign(found, msg.contact);\r\n    });\r\n  }\r\n\r\n  created() {\r\n    this.api.getContactList().then(contacts => this.contacts = contacts);\r\n  }\r\n\r\n  select(contact) {\r\n    this.selectedId = contact.id;\r\n    return true;\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export class ContactUpdated {\r\n  constructor(contact) {\r\n    this.contact = contact;\r\n  }\r\n}\r\n\r\nexport class ContactViewed {\r\n  constructor(contact) {\r\n    this.contact = contact;\r\n  }\r\n}\r\n","export class NoSelection {\r\n  message = \"Please Select a Contact.\";\r\n}","export function areEqual(obj1, obj2) {\r\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\r\n};","let latency = 200;\r\nlet id = 0;\r\n\r\nfunction getId(){\r\n  return ++id;\r\n}\r\n\r\nlet contacts = [\r\n  {\r\n    id:getId(),\r\n    firstName:'John',\r\n    lastName:'Tolkien',\r\n    email:'tolkien@inklings.com',\r\n    phoneNumber:'867-5306',\r\n    image: 'http://demos.telerik.com/kendo-ui/content/web/Customers/anton.jpg'\r\n  },\r\n  {\r\n    id:getId(),\r\n    firstName:'Clive',\r\n    lastName:'Lewis',\r\n    email:'lewis@inklings.com',\r\n    image: 'http://demos.telerik.com/kendo-ui/content/web/Customers/arout.jpg'\r\n  },\r\n  {\r\n    id:getId(),\r\n    firstName:'Owen',\r\n    lastName:'Barfield',\r\n    email:'barfield@inklings.com',\r\n    phoneNumber:'867-5308',\r\n    image: 'http://demos.telerik.com/kendo-ui/content/web/Customers/blonp.jpg'\r\n  },\r\n  {\r\n    id:getId(),\r\n    firstName:'Charles',\r\n    lastName:'Williams',\r\n    email:'williams@inklings.com',\r\n    phoneNumber:'867-5309',\r\n    image: 'http://demos.telerik.com/kendo-ui/content/web/Customers/bolid.jpg'\r\n  },\r\n  {\r\n    id:getId(),\r\n    firstName:'Roger',\r\n    lastName:'Green',\r\n    email:'green@inklings.com',\r\n    phoneNumber:'867-5310',\r\n    image: 'http://demos.telerik.com/kendo-ui/content/web/Customers/bonap.jpg'\r\n  }\r\n];\r\n\r\nexport class WebAPI {\r\n  isRequesting = false;\r\n  \r\n  getContactList(){\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        let results = contacts.map(x =>  { return {\r\n          id:x.id,\r\n          firstName:x.firstName,\r\n          lastName:x.lastName,\r\n          email:x.email,\r\n          phoneNumber:x.phoneNumber,\r\n          image:x.image\r\n        }});\r\n        resolve(results);\r\n        this.isRequesting = false;\r\n      }, latency);\r\n    });\r\n  }\r\n\r\n  getContactDetails(id){\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        let found = contacts.filter(x => x.id == id)[0];\r\n        resolve(JSON.parse(JSON.stringify(found)));\r\n        this.isRequesting = false;\r\n      }, latency);\r\n    });\r\n  }\r\n\r\n  saveContact(contact){\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        let instance = JSON.parse(JSON.stringify(contact));\r\n        let found = contacts.filter(x => x.id == contact.id)[0];\r\n\r\n        if(found){\r\n          let index = contacts.indexOf(found);\r\n          contacts[index] = instance;\r\n        }else{\r\n          instance.id = getId();\r\n          contacts.push(instance);\r\n        }\r\n\r\n        this.isRequesting = false;\r\n        resolve(instance);\r\n      }, latency);\r\n    });\r\n  }\r\n}\r\n","export function configure(config) {\r\n  config.globalResources(['./elements/loading-indicator']);\r\n}\r\n","import * as nprogress from 'nprogress';\r\nimport {bindable, noView, decorators} from 'aurelia-framework';\r\n\r\nexport let LoadingIndicator = decorators(\r\n  noView(['nprogress/nprogress.css']),\r\n  bindable({name: 'loading', defaultValue: false})\r\n).on(class {\r\n  loadingChanged(newValue) {\r\n    if (newValue) {\r\n      nprogress.start();\r\n    } else {\r\n      nprogress.done();\r\n    }\r\n  }\r\n});\r\n",null,null,null,null,null,null],"sourceRoot":"..\\src"}